/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RewardToken, RewardTokenInterface } from "../RewardToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "tradeHubAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "flowContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC1155InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC1155InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idsLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "valuesLength",
        type: "uint256",
      },
    ],
    name: "ERC1155InvalidArrayLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC1155InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC1155InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC1155InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC1155MissingApprovalForAll",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadataUri",
        type: "string",
      },
    ],
    name: "RewardTokenCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "ownerOrApproved",
        type: "address",
      },
    ],
    name: "RewardTokenDestroyed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "Counter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accessMasterAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "phygitalcontractAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "createFanToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "phygitalcontractAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "delegateAssetCreation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "destroyAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "phygitalToRewardId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newuri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeHub",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200201d3803806200201d833981016040819052620000349162000196565b846200004081620000a2565b5060056200004f8582620002dc565b5060066200005e8482620002dc565b50600780546001600160a01b039384166001600160a01b031991821617909155600c80549290931691811682179092556008805490921617905550620003a8915050565b6002620000b08282620002dc565b5050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000dc57600080fd5b81516001600160401b0380821115620000f957620000f9620000b4565b604051601f8301601f19908116603f01168101908282118183101715620001245762000124620000b4565b816040528381526020925086838588010111156200014157600080fd5b600091505b8382101562000165578582018301518183018401529082019062000146565b600093810190920192909252949350505050565b80516001600160a01b03811681146200019157600080fd5b919050565b600080600080600060a08688031215620001af57600080fd5b85516001600160401b0380821115620001c757600080fd5b620001d589838a01620000ca565b96506020880151915080821115620001ec57600080fd5b620001fa89838a01620000ca565b955060408801519150808211156200021157600080fd5b506200022088828901620000ca565b935050620002316060870162000179565b9150620002416080870162000179565b90509295509295909350565b600181811c908216806200026257607f821691505b6020821081036200028357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002d757600081815260208120601f850160051c81016020861015620002b25750805b601f850160051c820191505b81811015620002d357828155600101620002be565b5050505b505050565b81516001600160401b03811115620002f857620002f8620000b4565b62000310816200030984546200024d565b8462000289565b602080601f8311600181146200034857600084156200032f5750858301515b600019600386901b1c1916600185901b178555620002d3565b600085815260208120601f198616915b82811015620003795788860151825594840194600190910190840162000358565b5085821015620003985787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611c6580620003b86000396000f3fe608060405234801561001057600080fd5b50600436106101415760003560e01c806354fd4d50116100b8578063a4b110521161007c578063a4b11052146102d0578063bd85b039146102e3578063d5e5701814610303578063e985e9c514610316578063edf8706f14610329578063f242432a1461033c57600080fd5b806354fd4d501461025d5780635e3eeef9146102775780637ab00715146102a257806395d89b41146102b5578063a22cb465146102bd57600080fd5b80630e89341c1161010a5780630e89341c146101e457806318160ddd146101f75780632eb2c2d6146101ff5780634e1273f4146102125780634eeca076146102325780634f558e791461023b57600080fd5b8062fdd58e1461014657806301ffc9a71461016c57806302fe53051461018f57806306fdde03146101a45780630aa7c854146101b9575b600080fd5b610159610154366004611388565b61034f565b6040519081526020015b60405180910390f35b61017f61017a3660046113c8565b610377565b6040519015158152602001610163565b6101a261019d3660046114a3565b610382565b005b6101ac610459565b6040516101639190611526565b6008546101cc906001600160a01b031681565b6040516001600160a01b039091168152602001610163565b6101ac6101f2366004611539565b6104e7565b600454610159565b6101a261020d3660046115e1565b610589565b61022561022036600461168b565b6105f0565b6040516101639190611786565b61015960095481565b61017f610249366004611539565b600090815260036020526040902054151590565b610265600181565b60405160ff9091168152602001610163565b610159610285366004611388565b600b60209081526000928352604080842090915290825290205481565b6101a26102b0366004611799565b6106c5565b6101ac610785565b6101a26102cb3660046117c9565b610792565b6007546101cc906001600160a01b031681565b6101596102f1366004611539565b60009081526003602052604090205490565b610159610311366004611800565b6107a1565b61017f610324366004611858565b61089a565b61015961033736600461188b565b6108c8565b6101a261034a366004611922565b610a89565b6000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b600061037182610ae8565b600c546001600160a01b0316636d70f7ae336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156103d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fc9190611987565b61044d5760405162461bcd60e51b815260206004820152601a60248201527f526577617264546f6b656e3a20556e617574686f72697a65642100000000000060448201526064015b60405180910390fd5b61045681610b38565b50565b60058054610466906119a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610492906119a4565b80156104df5780601f106104b4576101008083540402835291602001916104df565b820191906000526020600020905b8154815290600101906020018083116104c257829003601f168201915b505050505081565b6000818152600a60205260409020805460609190610504906119a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610530906119a4565b801561057d5780601f106105525761010080835404028352916020019161057d565b820191906000526020600020905b81548152906001019060200180831161056057829003601f168201915b50505050509050919050565b336001600160a01b03861681148015906105aa57506105a8868261089a565b155b156105db5760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610444565b6105e88686868686610b44565b505050505050565b606081518351146106215781518351604051635b05999160e01b815260048101929092526024820152604401610444565b6000835167ffffffffffffffff81111561063d5761063d6113ec565b604051908082528060200260200182016040528015610666578160200160208202803683370190505b50905060005b84518110156106bd576020808202860101516106909060208084028701015161034f565b8282815181106106a2576106a26119de565b60209081029190910101526106b681611a0a565b905061066c565b509392505050565b806106d0338461034f565b146107385760405162461bcd60e51b815260206004820152603260248201527f526577617264546f6b656e3a2043616c6c6572206973206e6f7420746f6b656e604482015271081bdddb995c881bdc88185c1c1c9bdd995960721b6064820152608401610444565b610743338383610bab565b817f77ae73e9fd17485abbf01dffbf650cf3ffb79771e6e23a50beffcc20f5ab2107336040516001600160a01b03909116815260200160405180910390a25050565b60068054610466906119a4565b61079d338383610c13565b5050565b6001600160a01b0385166000908152600b602090815260408083208684529091528120548190156107f657506001600160a01b0386166000908152600b60209081526040808320878452909152902054610811565b6009805490600061080683611a0a565b919050555060095490505b61081d33828887610ca9565b6000818152600a602052604090206108358482611a6e565b5060075461084d906001600160a01b03166001610792565b85336001600160a01b0316827fec01398bf72ebae4ad81f8babbd6de07baf966f47c9998ce8c6e3ff8b8d2b574866040516108889190611526565b60405180910390a49695505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b600c546000906001600160a01b0316636d70f7ae336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610921573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109459190611987565b6109915760405162461bcd60e51b815260206004820152601a60248201527f526577617264546f6b656e3a20556e617574686f72697a6564210000000000006044820152606401610444565b6001600160a01b0387166000908152600b60209081526040808320888452909152812054156109e457506001600160a01b0387166000908152600b602090815260408083208884529091529020546109ff565b600980549060006109f483611a0a565b919050555060095490505b610a0b87828787610ca9565b6000818152600a60205260409020610a238482611a6e565b50600754610a3b906001600160a01b03166001610792565b84336001600160a01b0316827fec01398bf72ebae4ad81f8babbd6de07baf966f47c9998ce8c6e3ff8b8d2b57486604051610a769190611526565b60405180910390a4979650505050505050565b336001600160a01b0386168114801590610aaa5750610aa8868261089a565b155b15610adb5760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610444565b6105e88686868686610d06565b60006001600160e01b03198216636cdb3d1360e11b1480610b1957506001600160e01b031982166303a24d0760e21b145b8061037157506301ffc9a760e01b6001600160e01b0319831614610371565b600261079d8282611a6e565b6001600160a01b038416610b6e57604051632bfa23e760e11b815260006004820152602401610444565b6001600160a01b038516610b9757604051626a0d4560e21b815260006004820152602401610444565b610ba48585858585610d94565b5050505050565b6001600160a01b038316610bd457604051626a0d4560e21b815260006004820152602401610444565b604080516001808252602082018590528183019081526060820184905260a08201909252600060808201818152919291610ba491879185908590610d94565b6001600160a01b038216610c3c5760405162ced3e160e81b815260006004820152602401610444565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610cd357604051632bfa23e760e11b815260006004820152602401610444565b604080516001808252602082018690528183019081526060820185905260808201909252906105e8600087848487610d94565b6001600160a01b038416610d3057604051632bfa23e760e11b815260006004820152602401610444565b6001600160a01b038516610d5957604051626a0d4560e21b815260006004820152602401610444565b60408051600180825260208201869052818301908152606082018590526080820190925290610d8b8787848487610d94565b50505050505050565b610da085858585610de7565b6001600160a01b03841615610ba45782513390600103610dd95760208481015190840151610dd2838989858589610f42565b50506105e8565b6105e8818787878787611066565b610df38484848461114f565b6001600160a01b038416610ea6576000805b8351811015610e8c576000838281518110610e2257610e226119de565b602002602001015190508060036000878581518110610e4357610e436119de565b602002602001015181526020019081526020016000206000828254610e689190611b2e565b90915550610e7890508184611b2e565b92505080610e8590611a0a565b9050610e05565b508060046000828254610e9f9190611b2e565b9091555050505b6001600160a01b038316610f3c576000805b8351811015610f30576000838281518110610ed557610ed56119de565b602002602001015190508060036000878581518110610ef657610ef66119de565b602002602001015181526020019081526020016000206000828254039250508190555080830192505080610f2990611a0a565b9050610eb8565b50600480549190910390555b50505050565b6001600160a01b0384163b156105e85760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610f869089908990889088908890600401611b41565b6020604051808303816000875af1925050508015610fc1575060408051601f3d908101601f19168201909252610fbe91810190611b86565b60015b61102a573d808015610fef576040519150601f19603f3d011682016040523d82523d6000602084013e610ff4565b606091505b50805160000361102257604051632bfa23e760e11b81526001600160a01b0386166004820152602401610444565b805181602001fd5b6001600160e01b0319811663f23a6e6160e01b14610d8b57604051632bfa23e760e11b81526001600160a01b0386166004820152602401610444565b6001600160a01b0384163b156105e85760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906110aa9089908990889088908890600401611ba3565b6020604051808303816000875af19250505080156110e5575060408051601f3d908101601f191682019092526110e291810190611b86565b60015b611113573d808015610fef576040519150601f19603f3d011682016040523d82523d6000602084013e610ff4565b6001600160e01b0319811663bc197c8160e01b14610d8b57604051632bfa23e760e11b81526001600160a01b0386166004820152602401610444565b805182511461117e5781518151604051635b05999160e01b815260048101929092526024820152604401610444565b3360005b835181101561128d576020818102858101820151908501909101516001600160a01b03881615611235576000828152602081815260408083206001600160a01b038c1684529091529020548181101561120e576040516303dee4c560e01b81526001600160a01b038a166004820152602481018290526044810183905260648101849052608401610444565b6000838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b0387161561127a576000828152602081815260408083206001600160a01b038b16845290915281208054839290611274908490611b2e565b90915550505b50508061128690611a0a565b9050611182565b50825160010361130e5760208301516000906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516112ff929190918252602082015260400190565b60405180910390a45050610ba4565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161135d929190611c01565b60405180910390a45050505050565b80356001600160a01b038116811461138357600080fd5b919050565b6000806040838503121561139b57600080fd5b6113a48361136c565b946020939093013593505050565b6001600160e01b03198116811461045657600080fd5b6000602082840312156113da57600080fd5b81356113e5816113b2565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561142b5761142b6113ec565b604052919050565b600082601f83011261144457600080fd5b813567ffffffffffffffff81111561145e5761145e6113ec565b611471601f8201601f1916602001611402565b81815284602083860101111561148657600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156114b557600080fd5b813567ffffffffffffffff8111156114cc57600080fd5b6114d884828501611433565b949350505050565b6000815180845260005b81811015611506576020818501810151868301820152016114ea565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006113e560208301846114e0565b60006020828403121561154b57600080fd5b5035919050565b600067ffffffffffffffff82111561156c5761156c6113ec565b5060051b60200190565b600082601f83011261158757600080fd5b8135602061159c61159783611552565b611402565b82815260059290921b840181019181810190868411156115bb57600080fd5b8286015b848110156115d657803583529183019183016115bf565b509695505050505050565b600080600080600060a086880312156115f957600080fd5b6116028661136c565b94506116106020870161136c565b9350604086013567ffffffffffffffff8082111561162d57600080fd5b61163989838a01611576565b9450606088013591508082111561164f57600080fd5b61165b89838a01611576565b9350608088013591508082111561167157600080fd5b5061167e88828901611433565b9150509295509295909350565b6000806040838503121561169e57600080fd5b823567ffffffffffffffff808211156116b657600080fd5b818501915085601f8301126116ca57600080fd5b813560206116da61159783611552565b82815260059290921b840181019181810190898411156116f957600080fd5b948201945b8386101561171e5761170f8661136c565b825294820194908201906116fe565b9650508601359250508082111561173457600080fd5b5061174185828601611576565b9150509250929050565b600081518084526020808501945080840160005b8381101561177b5781518752958201959082019060010161175f565b509495945050505050565b6020815260006113e5602083018461174b565b600080604083850312156117ac57600080fd5b50508035926020909101359150565b801515811461045657600080fd5b600080604083850312156117dc57600080fd5b6117e58361136c565b915060208301356117f5816117bb565b809150509250929050565b600080600080600060a0868803121561181857600080fd5b6118218661136c565b94506020860135935060408601359250606086013567ffffffffffffffff8082111561184c57600080fd5b61165b89838a01611433565b6000806040838503121561186b57600080fd5b6118748361136c565b91506118826020840161136c565b90509250929050565b60008060008060008060c087890312156118a457600080fd5b6118ad8761136c565b95506118bb6020880161136c565b94506040870135935060608701359250608087013567ffffffffffffffff808211156118e657600080fd5b6118f28a838b01611433565b935060a089013591508082111561190857600080fd5b5061191589828a01611433565b9150509295509295509295565b600080600080600060a0868803121561193a57600080fd5b6119438661136c565b94506119516020870161136c565b93506040860135925060608601359150608086013567ffffffffffffffff81111561197b57600080fd5b61167e88828901611433565b60006020828403121561199957600080fd5b81516113e5816117bb565b600181811c908216806119b857607f821691505b6020821081036119d857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611a1c57611a1c6119f4565b5060010190565b601f821115611a6957600081815260208120601f850160051c81016020861015611a4a5750805b601f850160051c820191505b818110156105e857828155600101611a56565b505050565b815167ffffffffffffffff811115611a8857611a886113ec565b611a9c81611a9684546119a4565b84611a23565b602080601f831160018114611ad15760008415611ab95750858301515b600019600386901b1c1916600185901b1785556105e8565b600085815260208120601f198616915b82811015611b0057888601518255948401946001909101908401611ae1565b5085821015611b1e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115610371576103716119f4565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611b7b908301846114e0565b979650505050505050565b600060208284031215611b9857600080fd5b81516113e5816113b2565b6001600160a01b0386811682528516602082015260a060408201819052600090611bcf9083018661174b565b8281036060840152611be1818661174b565b90508281036080840152611bf581856114e0565b98975050505050505050565b604081526000611c14604083018561174b565b8281036020840152611c26818561174b565b9594505050505056fea2646970667358221220232574d1756c40ec33ed0e02e656ace628a10d81e60bc03b4398a54741b0f85e64736f6c63430008140033";

type RewardTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardToken__factory extends ContractFactory {
  constructor(...args: RewardTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RewardToken";
  }

  deploy(
    baseURI: string,
    _name: string,
    _symbol: string,
    tradeHubAddress: string,
    flowContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RewardToken> {
    return super.deploy(
      baseURI,
      _name,
      _symbol,
      tradeHubAddress,
      flowContract,
      overrides || {}
    ) as Promise<RewardToken>;
  }
  getDeployTransaction(
    baseURI: string,
    _name: string,
    _symbol: string,
    tradeHubAddress: string,
    flowContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      baseURI,
      _name,
      _symbol,
      tradeHubAddress,
      flowContract,
      overrides || {}
    );
  }
  attach(address: string): RewardToken {
    return super.attach(address) as RewardToken;
  }
  connect(signer: Signer): RewardToken__factory {
    return super.connect(signer) as RewardToken__factory;
  }
  static readonly contractName: "RewardToken";
  public readonly contractName: "RewardToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardTokenInterface {
    return new utils.Interface(_abi) as RewardTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardToken {
    return new Contract(address, _abi, signerOrProvider) as RewardToken;
  }
}
